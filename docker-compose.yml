version: '3'
services:
  rabbitmq3:
      container_name: "rabbitmq"
      build:
        context: ./rabbitmq
        dockerfile: Dockerfile
      #environment:
        # login details
        #- RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
        #- RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      ports:
        - '5672:5672' # AMQP protocol port
        - '15672:15672' # HTTP management UI
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
      networks:
        - backend
  
  consumer:
      container_name: "consumer"
      build:
        context: ./consumer
        dockerfile: Dockerfile
      depends_on:
        rabbitmq3:
          condition: service_healthy
      networks:
        - backend

  fastapi:
    container_name: fastapi
    build:
      context: ./fastapi_app
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      mysql-db:
        condition: service_healthy # this ensures fastapi only starts after mysql-db is done starting up
      rabbitmq3:
          condition: service_healthy
    volumes:
      - ./fastapi_app:/app
    env_file:
      - ./fastapi_app/.env
    networks:
      - backend

  mysql-db:
    container_name: mysql
    build:
      context: ./mysql-db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-logs:/var/log/mysql
      - ./mysql-db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Map the init.sql file to the container's initdb.d directory
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
    ports:
      - "3306:3306"
    networks:
      - backend

volumes:
  mysql-data:
  mysql-logs:

networks:
   backend:






















  # sonarqube:
  #   image: sonarqube:lts-community
  #   container_name: sonarqube
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - backend